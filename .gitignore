/target
# .gitignore 文件

# 编译产物
*.class
*.log
*.ctxt
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar
*.tmp
*.temp
*.swp
*.swo
*.bak
*.cache
*.ldb
*.mdmp
*.sqlite

# 项目相关
.project
.settings/
.classpath
.idea/
*.iml
*.iws
*.ipr
.vscode/
*.sublime-workspace
*.sublime-project

# 依赖文件
node_modules/
bower_components/
jspm_packages/
*.tgz
yarn.lock
package-lock.json

# 操作系统产生的文件
.DS_Store
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# 个人IDE配置
*.orig
*.pyc
*.pyo
*.suo
*.userprefs

# 版本控制系统产生的文件
.svn/
.hg/
.hgignore
.hgcheck
.cvs/
.scc

# 日志文件
logs/

# 环境配置文件
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# 编译工具产生的文件
dist/
build/
target/
out/

# 敏感文件
*.key
*.pem
*.pub
*.cer
*.crt
*.csr


# Generated by Cargo
# will have compiled files and executables
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# Support playwright testing
test-results/
end2end/playwright-report/
playwright/.cache/
pnpm-lock.yaml
/build/release
/build/target
/build/install
/build/*.sha256
/dev
/*.log
/debian/*.log
/.vscode
/*.json
/restart.sh
/udp_echo_server.py
/.idea
/.devcontainer
